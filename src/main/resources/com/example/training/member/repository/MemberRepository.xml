<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.example.training.member.repository.MemberRepository">
	<select id="findByEmail"
		resultType="com.example.training.member.domain.Member">
		SELECT
		*
		FROM
		MEMBER
		WHERE
		email = "${email}"
	</select>

	<select id="findByEmailMember"
		resultType="com.example.training.member.MemberEntity">
		SELECT
		id as memberId,
		password,
		email,
		phone_number,
		last_name,
		first_name,
		postcode,
		prefecture,
		city,
		block,
		last_updated_by,
		status
		FROM
		MEMBER
		WHERE
		email = "${email}"
	</select>

	<select id="findByEmailSample" resultMap="memberMap"
		parameterType="map">
		SELECT
		id,
		email,
		phone_number,
		last_name,
		first_name,
		postcode,
		prefecture,
		city,
		block,
		status
		FROM
		MEMBER
		WHERE
		email = "${email}"
	</select>


	<resultMap type="com.example.training.member.domain.Member"
		id="memberMap">
		<association property="id">
			<constructor>
				<arg column="id" javaType="Long" />
			</constructor>
		</association>
		<association property="fullName" resultMap="fullNameMap" />
		<association property="address" resultMap="addressMap" />
		<association property="email">
			<result column="email" javaType="String" />
		</association>
		<association property="phoneNumber">
			<constructor>
				<arg column="phone_number" javaType="String" />
			</constructor>
		</association>
	</resultMap>

	<resultMap type="com.example.training.member.domain.FullName"
		id="fullNameMap">
		<constructor>
			<arg column="last_name" javaType="String" />
			<arg column="first_name" javaType="String" />
		</constructor>
	</resultMap>

	<resultMap type="com.example.training.member.domain.Address"
		id="addressMap">
		<association property="postcode"
			javaType="com.example.training.member.domain.address.Postcode">
			<constructor>
				<arg column="postcode" javaType="String" />
			</constructor>
		</association>
		<association property="prefecture"
			javaType="com.example.training.member.domain.address.Prefecture">
			<constructor>
				<arg column="prefecture" javaType="String" />
			</constructor>
		</association>
		<association property="city"
			javaType="com.example.training.member.domain.address.City">
			<constructor>
				<arg column="city" javaType="String" />
			</constructor>
		</association>
		<association property="block"
			javaType="com.example.training.member.domain.address.Block">
			<constructor>
				<arg column="block" javaType="String" />
			</constructor>
		</association>
	</resultMap>






	<select id="findById"
		resultType="com.example.training.member.domain.Member">
		SELECT * FROM MEMBER WHERE id = "${id}"
	</select>

	<select id="findAll"
		resultType="com.example.training.member.domain.Member">
		SELECT * FROM MEMBER
	</select>

	<select id="findAddress"
		resultType="com.example.training.member.domain.Member">
		SELECT
		last_name,
		first_name,
		email,
		postcode,
		prefecture,
		city,
		block,
		phone_number
		FROM
		MEMBER
		m
		WHERE m.email = "${email}"
	</select>

	<insert id="create" useGeneratedKeys="true">
		INSERT INTO MEMBER (email,
		password, last_updated_by, status) VALUES (
		"${email}",
		"${password}",
		"none",
		"unapproved"
		)
	</insert>

	<select id="countByEmail" resultType="int">
		SELECT COUNT(*) FROM MEMBER
		WHERE email = #{email}
	</select>

	<update id="update">
		UPDATE MEMBER SET
		email=#{memberEditForm.email},
		last_updated_by=#{lastUpdatedBy},
		status=#{memberEditForm.status}
		WHERE
		id= #{memberEditForm.id}
	</update>

	<update id="updateAtOrder">
		UPDATE MEMBER SET
		first_name=#{orderForm.firstName},
		last_name=#{orderForm.lastName},
		phone_number=#{orderForm.phoneNumber},
		postcode=#{orderForm.postcode},
		prefecture=#{orderForm.prefecture},
		city=#{orderForm.city},
		block=#{orderForm.block}
		WHERE id= #{orderForm.memberId}
	</update>


</mapper>
